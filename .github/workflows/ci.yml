name: "Run automated tests and the mnist-digit-demo-pipeline"

on:
  push:
    branches:
      - development

  # See:
  # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - development

  workflow_dispatch:

# Give GITHUB_TOKEN minimal permissions (ie., only metadata read-access). To
# verify this, check the "Set up jobs" section in the Github actions log.
#
# See:
# https://docs.github.com/en/actions/reference/authentication-in-a-workflow
# https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#permissions
#
# and also links in:
# https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/
permissions:
  contents: "none"  # project repo:s are public

jobs:
  run-all-tests:
    runs-on: [ubuntu-20.04]

    steps:
      - name: "Determine run-environment"
        shell: bash
        run: |
            echo "RUN_ENVIRONMENT=ci" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: "Build docker image"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-build-all

      # -- check and test common package used by multiple tasks in the pipeline --

      - name: "common: Run unit tests"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-run-in-cicd \
                COMMAND="(cd common; make install test-pytest )"

      - name: "common: Check mypy type hints"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-run-in-cicd \
                COMMAND="(cd common; make install test-mypy )"

      - name: "common: Check black formatting"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-run-in-cicd \
                COMMAND="(cd common; make install test-black )"

      # -- test and run pipeline --

      - name: "mnist-digits-demo-pipeline: Check mypy type hints"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-run-in-cicd \
                COMMAND="\
                    (cd common; make install) && \
                    (cd mnist-demo-pipeline; make test-mypy)"

      - name: "mnist-digits-demo-pipeline: Check black formatting"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-run-in-cicd \
                COMMAND="\
                    (cd common; make install) && \
                    (cd mnist-demo-pipeline; make test-black)"

      - name: "mnist-digits-demo-pipeline: Run pipeline"
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
            make docker-run-in-cicd \
                COMMAND="\
                    (cd common; make install) && \
                    (cd mnist-demo-pipeline; make run)"

      # -- store pipeline outputs --

      # Upload action uses a separate token (and not GITHUB_TOKEN), see
      # https://github.com/actions/upload-artifact/issues/197
      - name: "Store pipeline output files"
        uses: actions/upload-artifact@v2
        with:
          name: mnist-digits-demo-pipeline-outputs
          path: ${{ github.workspace }}/pipeline-outputs
          if-no-files-found: error
          retention-days: 10
